#================== Rate Limit ================
resilience4j.ratelimiter.instances.getMessageRateLimit.limit-for-period=2
resilience4j.ratelimiter.instances.getMessageRateLimit.limit-refresh-period=5s
resilience4j.ratelimiter.instances.getMessageRateLimit.timeout-duration=0

#=================== Retry Action ===========================
resilience4j.retry.instances.getInvoiceRetry.max-attempts=5
resilience4j.retry.instances.getInvoiceRetry.wait-duration=2s
resilience4j.retry.instances.getInvoiceRetry.retry-exceptions=org.springframework.web.client.ResourceAccessException
#The above properties represent that only 2 requests are allowed in 5 seconds duration.
# Also, there is no timeout duration which means after completion of 5 seconds, the user can send
# request again.


#================================ Circuit Broker Properties = ================================
resilience4j.circuitbreaker.instances.getInvoiceCB.failure-rate-threshold=80
resilience4j.circuitbreaker.instances.getInvoiceCB.sliding-window-size=10
resilience4j.circuitbreaker.instances.getInvoiceCB.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.getInvoiceCB.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.getInvoiceCB.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.getInvoiceCB.permitted-number-of-calls-in-half-open-state=4
resilience4j.circuitbreaker.instances.getInvoiceCB.wait-duration-in-open-state=1s


#==================== Bulkhead ===============================
resilience4j.bulkhead.instances.getMessageBH.max-concurrent-calls=5
resilience4j.bulkhead.instances.getMessageBH.max-wait-duration=0
#max-concurrent-calls=5? indicates that if the number of concurrent calls exceed 5,
# activate the fallback method.


#?max-wait-duration=0? indicates that don?t wait for anything, show response immediately
# based on the configuration.

#==================== Time handler ===================
resilience4j.timelimiter.instances.getMessageTL.timeout-duration=1ms
resilience4j.timelimiter.instances.getMessageTL.cancel-running-future=false

#timeout-duration=1ms? indicates that the maximum amount of time a request can take
# to respond is 1 millisecond

#?cancel-running-future=false? indicates that do not cancel the Running Completable Futures After TimeOut.